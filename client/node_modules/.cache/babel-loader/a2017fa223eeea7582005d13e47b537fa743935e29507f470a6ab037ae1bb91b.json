{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evan\\\\Desktop\\\\Noter\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from \"react-query\";\nimport { getTodos, postTodo } from \"../my-api\";\n\n// Create a client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // Provide the client to your App\n    _jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nfunction Todos() {\n  _s();\n  // Access the client\n  const queryClient = useQueryClient();\n\n  // Queries\n  const query = useQuery(\"todos\", getTodos);\n\n  // Mutations\n  const mutation = useMutation(postTodo, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(\"todos\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: query.data.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        mutation.mutate({\n          id: Date.now(),\n          title: \"Do Laundry\"\n        });\n      },\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"P8q+MECenBitEMVhbWeqRdNMRMw=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c2 = Todos;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Todos\");","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","QueryClient","QueryClientProvider","getTodos","postTodo","jsxDEV","_jsxDEV","queryClient","App","client","children","Todos","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","query","mutation","onSuccess","invalidateQueries","data","map","todo","title","id","onClick","mutate","Date","now","_c2","$RefreshReg$"],"sources":["C:/Users/evan/Desktop/Noter/client/src/App.js"],"sourcesContent":["import {\n  useQuery,\n  useMutation,\n  useQueryClient,\n  QueryClient,\n  QueryClientProvider,\n} from \"react-query\";\nimport { getTodos, postTodo } from \"../my-api\";\n\n// Create a client\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    // Provide the client to your App\n    <QueryClientProvider client={queryClient}>\n      <Todos />\n    </QueryClientProvider>\n  );\n}\n\nfunction Todos() {\n  // Access the client\n  const queryClient = useQueryClient();\n\n  // Queries\n  const query = useQuery(\"todos\", getTodos);\n\n  // Mutations\n  const mutation = useMutation(postTodo, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(\"todos\");\n    },\n  });\n\n  return (\n    <div>\n      <ul>\n        {query.data.map((todo) => (\n          <li key={todo.id}>{todo.title}</li>\n        ))}\n      </ul>\n\n      <button\n        onClick={() => {\n          mutation.mutate({\n            id: Date.now(),\n            title: \"Do Laundry\",\n          });\n        }}\n      >\n        Add Todo\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SACEA,QAAQ,EACRC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,mBAAmB,QACd,aAAa;AACpB,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,WAAW;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIN,WAAW,CAAC,CAAC;AAErC,SAASO,GAAGA,CAAA,EAAG;EACb;IAAA;IACE;IACAF,OAAA,CAACJ,mBAAmB;MAACO,MAAM,EAAEF,WAAY;MAAAG,QAAA,eACvCJ,OAAA,CAACK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;AAE1B;AAACC,EAAA,GAPQR,GAAG;AASZ,SAASG,KAAKA,CAAA,EAAG;EAAAM,EAAA;EACf;EACA,MAAMV,WAAW,GAAGP,cAAc,CAAC,CAAC;;EAEpC;EACA,MAAMkB,KAAK,GAAGpB,QAAQ,CAAC,OAAO,EAAEK,QAAQ,CAAC;;EAEzC;EACA,MAAMgB,QAAQ,GAAGpB,WAAW,CAACK,QAAQ,EAAE;IACrCgB,SAAS,EAAEA,CAAA,KAAM;MACf;MACAb,WAAW,CAACc,iBAAiB,CAAC,OAAO,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,oBACEf,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EACGQ,KAAK,CAACI,IAAI,CAACC,GAAG,CAAEC,IAAI,iBACnBlB,OAAA;QAAAI,QAAA,EAAmBc,IAAI,CAACC;MAAK,GAApBD,IAAI,CAACE,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELT,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAM;QACbR,QAAQ,CAACS,MAAM,CAAC;UACdF,EAAE,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC;UACdL,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAE;MAAAf,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,CAnCQN,KAAK;EAAA,QAEQX,cAAc,EAGpBF,QAAQ,EAGLC,WAAW;AAAA;AAAAgC,GAAA,GARrBpB,KAAK;AAAA,IAAAK,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}