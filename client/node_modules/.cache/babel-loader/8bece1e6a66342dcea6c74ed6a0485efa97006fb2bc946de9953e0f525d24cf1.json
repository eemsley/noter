{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const counterSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    username: null\n  },\n  reducers: {\n    setUsername: (state, action) => {\n      state.value = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","username","reducers","setUsername","state","action","value","payload","increment","decrement","incrementByAmount","actions","reducer"],"sources":["C:/Users/evan/Desktop/Noter/client/src/redux/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    username: null,\r\n  },\r\n  reducers: {\r\n    setUsername: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACE,KAAK,GAAGD,MAAM,CAACE,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAkB,CAAC,GAAGZ,YAAY,CAACa,OAAO;AAE/E,eAAeb,YAAY,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}