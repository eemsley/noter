{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evan\\\\Desktop\\\\Noter\\\\client\\\\src\\\\screens\\\\AllNotes.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllNotes() {\n  _s();\n  const getNotes = async () => {\n    const res = await fetch(\"http://localhost:5000/notes\");\n    console.log(res.json);\n    return res.json();\n  };\n  // Using the hook\n  const {\n    data,\n    error,\n    isLoading\n  } = useQuery(\"randomFacts\", getNotes);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Request Failed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 21\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full bg-slate-100 justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NOTES:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), data.map(note => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(AllNotes, \"vamb9feK/asxjJLX6wcKCD8DQJA=\", false, function () {\n  return [useQuery];\n});\n_c = AllNotes;\nexport default AllNotes;\nvar _c;\n$RefreshReg$(_c, \"AllNotes\");","map":{"version":3,"names":["React","useQuery","jsxDEV","_jsxDEV","AllNotes","_s","getNotes","res","fetch","console","log","json","data","error","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","note","text","_c","$RefreshReg$"],"sources":["C:/Users/evan/Desktop/Noter/client/src/screens/AllNotes.js"],"sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nfunction AllNotes() {\r\n  const getNotes = async () => {\r\n    const res = await fetch(\"http://localhost:5000/notes\");\r\n    console.log(res.json);\r\n    return res.json();\r\n  };\r\n  // Using the hook\r\n  const { data, error, isLoading } = useQuery(\"randomFacts\", getNotes);\r\n\r\n  if (error) return <div>Request Failed</div>;\r\n  if (isLoading) return <div>Loading...</div>;\r\n  return (\r\n    <div className=\"h-full w-full bg-slate-100 justify-center items-center\">\r\n      <h1>NOTES:</h1>\r\n      {data.map((note) => {\r\n        return <p>{note.text}</p>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllNotes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IACtDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrB,OAAOJ,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC;EACD;EACA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGb,QAAQ,CAAC,aAAa,EAAEK,QAAQ,CAAC;EAEpE,IAAIO,KAAK,EAAE,oBAAOV,OAAA;IAAAY,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIL,SAAS,EAAE,oBAAOX,OAAA;IAAAY,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,wDAAwD;IAAAL,QAAA,gBACrEZ,OAAA;MAAAY,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdP,IAAI,CAACS,GAAG,CAAEC,IAAI,IAAK;MAClB,oBAAOnB,OAAA;QAAAY,QAAA,EAAIO,IAAI,CAACC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC3B,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CAnBQD,QAAQ;EAAA,QAOoBH,QAAQ;AAAA;AAAAuB,EAAA,GAPpCpB,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}